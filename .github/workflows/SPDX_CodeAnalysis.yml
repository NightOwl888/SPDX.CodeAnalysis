name: SPDX.CodeAnalysis

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore

      - name: Build
        shell: pwsh
        run: |
          $nugetOut = "$env:DIST_DIR/nuget"
          dotnet build -c Release --no-restore -p:PackageOutputPath=$nugetOut

      - name: Publish Test Assemblies
        shell: pwsh
        run: |
          $testsOut = "$env:DIST_DIR/testBinaries"
          New-Item -ItemType Directory -Force -Path $testsOut | Out-Null

          # Find all csproj files where a segment is exactly 'Tests'
          Get-ChildItem -Recurse -Filter *.csproj | ForEach-Object {
            Write-Host "Found project: $($_.FullName)"
            $segments = $_.BaseName -split '\.'
            if ($segments -contains 'Tests') {
                $projName = $_.BaseName
                $outDir = Join-Path $testsOut $projName
                New-Item -ItemType Directory -Force -Path $outDir | Out-Null
                Write-Host "Publishing $($_.FullName) -> $outDir"
                dotnet publish $_.FullName -c Release --no-build -o $outDir --verbosity normal
                if ($LASTEXITCODE -ne 0) { throw "Publish failed for $($_.FullName)" }
            }
          }

      - name: Upload NuGet packages
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ${{ env.DIST_DIR }}/nuget

      - name: Upload test assemblies
        uses: actions/upload-artifact@v4
        with:
          name: test-assemblies
          path: ${{ env.DIST_DIR }}/testBinaries
    env:
      DIST_DIR: ${{ github.workspace }}/dist


