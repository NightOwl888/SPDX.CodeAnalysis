name: Test Powershell Scripts

on:
  workflow_dispatch:
  push:
  pull_request:
  
jobs:
  pester:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Restore Powershell Dependencies
        shell: pwsh
        run: ./.build/Ensure-Powershell-Dependencies.ps1

      - name: Run Pester Tests
        shell: pwsh
        continue-on-error: true
        run: |
          $ErrorActionPreference = 'Continue'
          try {
              $testResults = Invoke-Pester -Output Detailed -CI -PassThru
          } catch  {
              Write-Warning "Invoke-Pester threw an exception: $_"
          }
          $ErrorActionPreference = 'Stop'
          Set-StrictMode -Version Latest

          $failed = $false
          $perFile = @()

          if ($testResults -and $testResults.Containers -and $testResults.Containers.Count -gt 0) {
              foreach ($container in $testResults.Containers) {
                  $projectName = $container.Item.Name
                  $passedCount = $container.PassedCount
                  $failedCount = $container.FailedCount
                  $skippedCount = $container.SkippedCount

                  $perFile += [PSCustomObject]@{
                      Project      = $projectName
                      PassedCount  = [int]$passed
                      FailedCount  = [int]$failed
                      IgnoredCount = [int]$skipped
                      Crashed      = $false
                  }

                  if ($failedCount -gt 0) {
                      $failed = $true
                  }
              }
          }

          # Write summary
          Add-Content $env:GITHUB_STEP_SUMMARY "## Test Results`n"
          foreach ($r in $perFile) {

              # Determine status for this project
              if ($r.Crashed) {
                  $statusIcon = '⚠️'; $statusText = 'Crashed'
              } elseif ($r.FailedCount -gt 0) {
                  $statusIcon = '❌'; $statusText = 'Failed'
              } else {
                  $statusIcon = '✅'; $statusText = 'Passed'
              }

              $line = "- $($statusIcon) $($statusText) - **$($r.Project)** | Passed=$($r.Passed), Failed=$($r.Failed), Ignored=$($r.Ignored)"
              Add-Content $env:GITHUB_STEP_SUMMARY $line
          }

          if ($failed) {
              exit 1
          }
