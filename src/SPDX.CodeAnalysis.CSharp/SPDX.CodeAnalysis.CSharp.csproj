<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>SPDX.CodeAnalysis.CSharp</AssemblyName>
    <Nullable>enable</Nullable>

    <!-- Newer versions of VS and the SDK allow loading as 64 bit, so we need this for compatibility when loading in VS  -->
    <Prefer32Bit>false</Prefer32Bit>

    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <IsRoslynComponent>true</IsRoslynComponent>
    <!--<TreatWarningsAsErrors>true</TreatWarningsAsErrors>-->

    <!-- Avoid ID conflicts with the package project. -->
    <PackageId>*$(MSBuildProjectFile)*</PackageId>

    <EnableUnmanagedDebugging>true</EnableUnmanagedDebugging>
    <EnableNativeCodeDebugging>true</EnableNativeCodeDebugging>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <!-- Override Nerdbank.GitVersioning's output to bust the VS cache for debugging -->
    <SkipGitVersioning>true</SkipGitVersioning>
    <AssemblyVersion>1.0.0</AssemblyVersion>
    <FileVersion>1.0.*</FileVersion>
  </PropertyGroup>

  <Import Project="$(RepositoryRoot)eng/WildcardVersionSupport.targets" />

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
  </ItemGroup>

  <!-- See: https://github.com/dotnet/roslyn-analyzers/issues/5663#issuecomment-948304565 -->
  <ItemGroup>
    <AdditionalFiles Include="AnalyzerReleases.Shipped.md" />
    <AdditionalFiles Include="AnalyzerReleases.Unshipped.md" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="SPDX.CodeAnalysis.Tests" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SPDX.CodeAnalysis.Common\SPDX.CodeAnalysis.Common.csproj" />
    <ProjectReference Include="..\SPDX.Common\SPDX.Common.csproj" />
  </ItemGroup>

</Project>
